# finance/migrations/0014_remove_billaeinkauf_billa_einka_filiale_idx_and_more.py
# Generated by Django 5.2.7 on 2025-10-14 20:02

from django.db import migrations, models


def check_and_remove_index(apps, schema_editor):
    """
    Entfernt Indizes nur wenn sie existieren
    """
    with schema_editor.connection.cursor() as cursor:
        # Prüfe ob der alte Index existiert
        cursor.execute("""
            SELECT indexname 
            FROM pg_indexes 
            WHERE tablename = 'billa_einkauf' 
            AND indexname = 'billa_einka_filiale_idx'
        """)

        if cursor.fetchone():
            cursor.execute("DROP INDEX IF EXISTS billa_einka_filiale_idx")


def check_and_rename_index(apps, schema_editor):
    """
    Benennt Index nur um wenn er existiert
    """
    with schema_editor.connection.cursor() as cursor:
        # Prüfe ob der alte Index existiert
        cursor.execute("""
            SELECT indexname 
            FROM pg_indexes 
            WHERE tablename = 'billa_einkauf' 
            AND indexname = 'billa_einka_datum_5f130f_idx'
        """)

        if cursor.fetchone():
            cursor.execute("""
                ALTER INDEX billa_einka_datum_5f130f_idx 
                RENAME TO billa_einka_datum_641dea_idx
            """)


class Migration(migrations.Migration):
    dependencies = [
        ('finance', '0013_preishistorie_filiale_fk'),
    ]

    operations = [
        # Entferne den problematischen Index-Namen (wenn er existiert)
        migrations.RunPython(
            check_and_remove_index,
            migrations.RunPython.noop
        ),

        # Versuche den anderen Index umzubenennen (wenn er existiert)
        migrations.RunPython(
            check_and_rename_index,
            migrations.RunPython.noop
        ),

        # Füge den neuen Index hinzu
        migrations.AddIndex(
            model_name='billapreishistorie',
            index=models.Index(fields=['filiale'], name='billa_preis_filiale_d202d1_idx'),
        ),
    ]