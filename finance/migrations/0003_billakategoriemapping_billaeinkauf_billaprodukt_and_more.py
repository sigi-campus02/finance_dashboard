# Generated by Django 5.2.7 on 2025-10-13 21:22

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0002_scheduledtransaction'),
    ]

    operations = [
        migrations.CreateModel(
            name='BillaKategorieMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suchbegriff', models.CharField(max_length=200, unique=True, verbose_name='Suchbegriff')),
                ('kategorie', models.CharField(choices=[('obst_gemuese', 'Obst & Gemüse'), ('milchprodukte', 'Milchprodukte'), ('fleisch_fisch', 'Fleisch & Fisch'), ('brot_backwaren', 'Brot & Backwaren'), ('getraenke', 'Getränke'), ('tiefkuehl', 'Tiefkühl'), ('konserven', 'Konserven & Fertiggerichte'), ('suesses', 'Süßigkeiten & Snacks'), ('haushalt', 'Haushalt & Reinigung'), ('koerperpflege', 'Körperpflege'), ('sonstiges', 'Sonstiges')], max_length=50, verbose_name='Kategorie')),
                ('marke', models.CharField(blank=True, max_length=200, null=True, verbose_name='Marke')),
                ('prioritaet', models.IntegerField(default=0, verbose_name='Priorität')),
            ],
            options={
                'verbose_name': 'Billa Kategorie-Mapping',
                'verbose_name_plural': 'Billa Kategorie-Mappings',
                'db_table': 'billa_kategorie_mapping',
                'ordering': ['-prioritaet', 'suchbegriff'],
            },
        ),
        migrations.CreateModel(
            name='BillaEinkauf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum', models.DateField(db_index=True, verbose_name='Einkaufsdatum')),
                ('zeit', models.TimeField(blank=True, null=True, verbose_name='Uhrzeit')),
                ('filiale', models.CharField(db_index=True, max_length=20, verbose_name='Filiale')),
                ('kassa', models.IntegerField(blank=True, null=True, verbose_name='Kassa-Nr')),
                ('bon_nr', models.CharField(blank=True, max_length=50, null=True, verbose_name='Bon-Nummer')),
                ('re_nr', models.CharField(max_length=100, unique=True, verbose_name='Rechnungsnummer')),
                ('gesamt_preis', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Gesamtpreis')),
                ('gesamt_ersparnis', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Gesamte Ersparnis')),
                ('zwischensumme', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Zwischensumme')),
                ('mwst_b', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='MwSt 10%')),
                ('mwst_c', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='MwSt 20%')),
                ('mwst_g', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='MwSt 13%')),
                ('mwst_d', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='MwSt 0%')),
                ('oe_punkte_gesammelt', models.IntegerField(default=0, verbose_name='Ö-Punkte gesammelt')),
                ('oe_punkte_eingeloest', models.IntegerField(default=0, verbose_name='Ö-Punkte eingelöst')),
                ('pdf_datei', models.CharField(blank=True, max_length=500, null=True, verbose_name='PDF-Datei')),
                ('import_datum', models.DateTimeField(auto_now_add=True, verbose_name='Import-Datum')),
                ('notizen', models.TextField(blank=True, null=True, verbose_name='Notizen')),
            ],
            options={
                'verbose_name': 'Billa Einkauf',
                'verbose_name_plural': 'Billa Einkäufe',
                'db_table': 'billa_einkauf',
                'ordering': ['-datum', '-zeit'],
                'indexes': [models.Index(fields=['datum', 'filiale'], name='billa_einka_datum_5f130f_idx'), models.Index(fields=['re_nr'], name='billa_einka_re_nr_9d3566_idx')],
            },
        ),
        migrations.CreateModel(
            name='BillaProdukt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_original', models.CharField(max_length=500, unique=True, verbose_name='Original-Name')),
                ('name_normalisiert', models.CharField(db_index=True, max_length=500, verbose_name='Normalisierter Name')),
                ('kategorie', models.CharField(blank=True, choices=[('obst_gemuese', 'Obst & Gemüse'), ('milchprodukte', 'Milchprodukte'), ('fleisch_fisch', 'Fleisch & Fisch'), ('brot_backwaren', 'Brot & Backwaren'), ('getraenke', 'Getränke'), ('tiefkuehl', 'Tiefkühl'), ('konserven', 'Konserven & Fertiggerichte'), ('suesses', 'Süßigkeiten & Snacks'), ('haushalt', 'Haushalt & Reinigung'), ('koerperpflege', 'Körperpflege'), ('sonstiges', 'Sonstiges')], max_length=50, null=True, verbose_name='Kategorie')),
                ('marke', models.CharField(blank=True, max_length=200, null=True, verbose_name='Marke')),
                ('durchschnittspreis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Durchschnittspreis')),
                ('letzter_preis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Letzter Preis')),
                ('anzahl_kaeufe', models.IntegerField(default=0, verbose_name='Anzahl Käufe')),
                ('letzte_aktualisierung', models.DateTimeField(auto_now=True, verbose_name='Letzte Aktualisierung')),
            ],
            options={
                'verbose_name': 'Billa Produkt',
                'verbose_name_plural': 'Billa Produkte',
                'db_table': 'billa_produkt',
                'ordering': ['name_normalisiert'],
                'indexes': [models.Index(fields=['name_normalisiert'], name='billa_produ_name_no_58b515_idx'), models.Index(fields=['kategorie'], name='billa_produ_kategor_471062_idx')],
            },
        ),
        migrations.CreateModel(
            name='BillaArtikel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(verbose_name='Position auf Rechnung')),
                ('produkt_name', models.CharField(max_length=500, verbose_name='Produktname')),
                ('produkt_name_normalisiert', models.CharField(db_index=True, max_length=500, verbose_name='Produktname (normalisiert)')),
                ('menge', models.DecimalField(decimal_places=3, default=1, max_digits=10, verbose_name='Menge')),
                ('einheit', models.CharField(default='Stk', max_length=20, verbose_name='Einheit')),
                ('einzelpreis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Einzelpreis')),
                ('gesamtpreis', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Gesamtpreis')),
                ('rabatt', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Rabatt')),
                ('rabatt_typ', models.CharField(blank=True, max_length=100, null=True, verbose_name='Rabatt-Typ')),
                ('mwst_kategorie', models.CharField(choices=[('A', '0% (Pfand)'), ('B', '10% (Lebensmittel)'), ('C', '20% (Standard)'), ('D', 'Steuerfrei'), ('G', '13% (Sonstige)')], max_length=1, verbose_name='MwSt-Kategorie')),
                ('ist_gewichtsartikel', models.BooleanField(default=False, verbose_name='Gewichtsartikel')),
                ('ist_mehrfachgebinde', models.BooleanField(default=False, verbose_name='Mehrfachgebinde')),
                ('einkauf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artikel', to='finance.billaeinkauf', verbose_name='Einkauf')),
                ('produkt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artikel', to='finance.billaprodukt', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Billa Artikel',
                'verbose_name_plural': 'Billa Artikel',
                'db_table': 'billa_artikel',
                'ordering': ['einkauf', 'position'],
            },
        ),
        migrations.CreateModel(
            name='BillaPreisHistorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datum', models.DateField(db_index=True, verbose_name='Datum')),
                ('preis', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preis')),
                ('menge', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Menge')),
                ('einheit', models.CharField(max_length=20, verbose_name='Einheit')),
                ('filiale', models.CharField(max_length=20, verbose_name='Filiale')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preishistorie', to='finance.billaartikel', verbose_name='Artikel')),
                ('produkt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preishistorie', to='finance.billaprodukt', verbose_name='Produkt')),
            ],
            options={
                'verbose_name': 'Billa Preishistorie',
                'verbose_name_plural': 'Billa Preishistorie',
                'db_table': 'billa_preis_historie',
                'ordering': ['-datum'],
                'indexes': [models.Index(fields=['produkt', 'datum'], name='billa_preis_produkt_d25cb8_idx'), models.Index(fields=['datum'], name='billa_preis_datum_bc1699_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='billaartikel',
            index=models.Index(fields=['produkt_name_normalisiert'], name='billa_artik_produkt_f388ec_idx'),
        ),
        migrations.AddIndex(
            model_name='billaartikel',
            index=models.Index(fields=['einkauf', 'position'], name='billa_artik_einkauf_4e1d67_idx'),
        ),
    ]
